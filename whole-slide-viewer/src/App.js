// src/App.js
import React, { useState } from 'react';
import Header from './components/Header';
import ReportButton from './components/ReportButton';
import ImageView from './components/ImageView';
import CellStats from './components/CellStats';
import Magnification from './components/Magnification';
import BrightnessAdjuster from './components/BrightnessAdjuster';
import Help from './components/Help';
import Tutorial from './components/Tutorial';
import tutorialData from './tutorialData'; 
import './App.css';
import sampleImage from './sample-image.png';

function App() {
  const [darkMode, setDarkMode] = useState(false);
  const toggleDarkMode = () => setDarkMode(!darkMode);
  const [zoomLevel, setZoomLevel] = useState(1);
  const [brightness, setBrightness] = useState(100);

  const handleZoomIn = () => {
    setZoomLevel(prevZoom => prevZoom + 0.2);
  };

  const handleZoomOut = () => {
    setZoomLevel(prevZoom => (prevZoom > 1 ? prevZoom - 0.2 : 1));
  };

  const rbcData = [
    { type: "Angled Cells", count: 222, percentage: "67%" },
    { type: "Borderline Ovalocytes", count: 50, percentage: "20%" },
    { type: "Burr Cells", count: 87, percentage: "34%" },
    { type: "Fragmented Cells", count: 2, percentage: "0.12%" },
    { type: "Ovalocytes", count: 30, percentage: "12%" },
    { type: "Rounded RBC", count: 10, percentage: "4%" },
    { type: "Tear Drops", count: 5, percentage: "2%" }
  ];

  const wbcData = [
    { type: "Basophil", count: 222, percentage: "67%" },
    { type: "Eosinaphil", count: 50, percentage: "20%" },
    { type: "Lymphocyte", count: 87, percentage: "34%" },
    { type: "Monocyte", count: 2, percentage: "0.12%" },
  ];

  // Example data to download
  const reportData = {
    title: "My Report",
    date: new Date().toLocaleDateString(),
    content: "This is a sample report generated by the application.",
    stats: {
      views: 100,
      likes: 20,
      shares: 5,
    },
  };

  return (
    <div className={`app-container ${darkMode ? 'dark-mode' : ''}`}>
      <Header />
      <button onClick={toggleDarkMode} className="dark-mode-toggle">
        {darkMode ? 'Light Mode' : 'Dark Mode'}
      </button>

      <div className="main-content">
        <div className="cell-stats-section">
          <CellStats title="RBC" data={rbcData} />
          <CellStats title="WBC" data={wbcData} />
        </div>

        <div className="image-section">
          <ImageView
            imageSrc={sampleImage}
            zoomLevel={zoomLevel}
            brightness={brightness}
          />
          <div className="zoom-controls">
            <button onClick={() => setZoomLevel(1)}>Home</button>
            <button onClick={handleZoomIn}>Zoom In</button>
            <button onClick={handleZoomOut}>Zoom Out</button>
          </div>
          <div className="right-top-corner">
            <img src={sampleImage} alt="Cell" style={{ transform: `scale(${zoomLevel})` }} />
          </div>
          <Magnification setZoomLevel={setZoomLevel} />
          <BrightnessAdjuster setBrightness={setBrightness} />
          {/* <ShareOptions /> */}
        </div>
      </div>

      {/* Add the Help and Tutorial components here */}
      <Help /> {/* Display the Help section */}
      <Tutorial data={tutorialData} /> {/* Display the Tutorial section */}

      {/* Include the ReportButton with the reportData prop */}
      <ReportButton data={reportData} />
    </div>
  );
}

export default App;




